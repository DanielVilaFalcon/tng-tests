<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.5.2 on linux)" generated="20190724 19:27:53.308" rpa="false">
<suite name="Test" source="/home/panos/tango-dist/tng-tests/tests/VnV/test_vnv_monitoring_framework/test.robot" id="s1">
<test name="Setting the VnV Path" id="s1-t1">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${from_date}</var>
</assign>
<msg timestamp="20190724 19:27:53.783" level="INFO">${from_date} = 2019-07-24 19:27:53.783</msg>
<status starttime="20190724 19:27:53.783" endtime="20190724 19:27:53.783" status="PASS"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${from_date}</arg>
</arguments>
<msg timestamp="20190724 19:27:53.784" level="INFO">${from_date} = 2019-07-24 19:27:53.783</msg>
<status starttime="20190724 19:27:53.783" endtime="20190724 19:27:53.784" status="PASS"></status>
</kw>
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${VNV_HOST}</arg>
</arguments>
<status starttime="20190724 19:27:53.784" endtime="20190724 19:27:53.784" status="PASS"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190724 19:27:58.151" level="INFO">${result} = True</msg>
<status starttime="20190724 19:27:53.784" endtime="20190724 19:27:58.151" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status starttime="20190724 19:27:58.151" endtime="20190724 19:27:58.152" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:53.782" endtime="20190724 19:27:58.152" critical="yes" status="PASS"></status>
</test>
<test name="Clean the Packages" id="s1-t2">
<kw name="Get Packages" library="tnglib">
<doc>Returns info on all available packages.</doc>
<assign>
<var>@{PACKAGES}</var>
</assign>
<msg timestamp="20190724 19:27:58.538" level="INFO">@{PACKAGES} = [ True | [{'package_uuid': '6db5dd57-d270-426e-aa08-3fb62aa21d41', 'version': '0.1', 'created_at': '2019-07-17T07:33:59.875+00:00', 'name': 'media-hls-test'}, {'package_uuid': 'b2ffdef7-1e25-44af-ac78...</msg>
<status starttime="20190724 19:27:58.153" endtime="20190724 19:27:58.538" status="PASS"></status>
</kw>
<kw name="${PACKAGE} IN [ @{PACKAGES[1]} ]" type="for">
<kw name="${PACKAGE} = {'package_uuid': '6db5dd57-d270-426e-aa08-3fb62aa21d41', 'version': '0.1', 'created_at': '2019-07-17T07:33:59.875+00:00', 'name': 'media-hls-test'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status starttime="20190724 19:27:58.539" endtime="20190724 19:27:58.539" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.539" endtime="20190724 19:27:58.539" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'b2ffdef7-1e25-44af-ac78-5423401fbc10', 'version': '0.1', 'created_at': '2019-07-23T10:43:42.164+00:00', 'name': 'generic-probes-test-pingonly-2-parallel-probes'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status starttime="20190724 19:27:58.540" endtime="20190724 19:27:58.540" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.540" endtime="20190724 19:27:58.540" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '10f912d0-9713-4a64-88ed-d5c04a93c2f7', 'version': '0.1', 'created_at': '2019-07-23T10:50:26.623+00:00', 'name': 'generic-probes-test-pingonly-2-instances-probes'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status starttime="20190724 19:27:58.540" endtime="20190724 19:27:58.541" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.540" endtime="20190724 19:27:58.541" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'b00fd19d-4b36-4a06-b234-27970e4a478b', 'version': '0.1', 'created_at': '2019-07-24T06:44:30.626+00:00', 'name': 'generic-probes-test-pingonly-testing-tags-not-match'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status starttime="20190724 19:27:58.541" endtime="20190724 19:27:58.541" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.541" endtime="20190724 19:27:58.541" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'eef57155-f294-413e-bcf5-4743dd7964a6', 'version': '0.2', 'created_at': '2019-07-24T15:04:00.010+00:00', 'name': 'test-ns-nsid1v-sonata-no-tags'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status starttime="20190724 19:27:58.542" endtime="20190724 19:27:58.542" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.542" endtime="20190724 19:27:58.542" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'ff7e59c8-4132-49f1-adcb-f3319d5779da', 'version': '0.1', 'created_at': '2019-07-24T15:04:03.968+00:00', 'name': 'generic-probes-test-pingonly-dependency-2-probes'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status starttime="20190724 19:27:58.542" endtime="20190724 19:27:58.543" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.542" endtime="20190724 19:27:58.543" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.539" endtime="20190724 19:27:58.543" status="PASS"></status>
</kw>
<status starttime="20190724 19:27:58.152" endtime="20190724 19:27:58.543" critical="yes" status="PASS"></status>
</test>
<test name="Upload the NS Package" id="s1-t3">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${NS_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190724 19:27:58.545" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: './packages/eu.5gtango.ns-mediapilot-service.0.5.tgo'</msg>
<status starttime="20190724 19:27:58.544" endtime="20190724 19:27:58.545" status="FAIL"></status>
</kw>
<status starttime="20190724 19:27:58.543" endtime="20190724 19:27:58.545" critical="yes" status="FAIL">FileNotFoundError: [Errno 2] No such file or directory: './packages/eu.5gtango.ns-mediapilot-service.0.5.tgo'</status>
</test>
<test name="Upload the TST Package" id="s1-t4">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${TST_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190724 19:27:58.546" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: './packages/eu.5gtango.media-performance-test.0.1.tgo'</msg>
<status starttime="20190724 19:27:58.546" endtime="20190724 19:27:58.546" status="FAIL"></status>
</kw>
<status starttime="20190724 19:27:58.545" endtime="20190724 19:27:58.546" critical="yes" status="FAIL">FileNotFoundError: [Errno 2] No such file or directory: './packages/eu.5gtango.media-performance-test.0.1.tgo'</status>
</test>
<test name="Wait For Service Instance Ready" id="s1-t5">
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${SP_HOST}</arg>
</arguments>
<status starttime="20190724 19:27:58.547" endtime="20190724 19:27:58.547" status="PASS"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190724 19:27:58.865" level="INFO">${result} = True</msg>
<status starttime="20190724 19:27:58.547" endtime="20190724 19:27:58.865" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status starttime="20190724 19:27:58.866" endtime="20190724 19:27:58.866" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>120</arg>
</arguments>
<status starttime="20190724 19:27:58.866" endtime="20190724 19:28:06.809" status="FAIL"></status>
</kw>
<status starttime="20190724 19:27:58.547" endtime="20190724 19:28:06.810" critical="yes" status="FAIL">Execution terminated by signal</status>
</test>
<test name="Retrieve list of monitoring metrics" id="s1-t6">
<tags>
<tag>robot:exit</tag>
</tags>
<status starttime="20190724 19:28:06.810" endtime="20190724 19:28:06.811" critical="yes" status="FAIL">Test execution stopped due to a fatal error.</status>
</test>
<test name="Wait For Test Execution" id="s1-t7">
<tags>
<tag>robot:exit</tag>
</tags>
<status starttime="20190724 19:28:06.812" endtime="20190724 19:28:06.813" critical="yes" status="FAIL">Test execution stopped due to a fatal error.</status>
</test>
<doc>Test monitoring data collection</doc>
<status starttime="20190724 19:27:53.309" endtime="20190724 19:28:06.815" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat fail="5" pass="2">Critical Tests</stat>
<stat fail="5" pass="2">All Tests</stat>
</total>
<tag>
<stat info="combined" fail="3" pass="2" combined="NOT robot:exit">NOT robot:exit</stat>
<stat fail="2" pass="0">robot:exit</stat>
</tag>
<suite>
<stat fail="5" name="Test" pass="2" id="s1">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
