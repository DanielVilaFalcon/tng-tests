#get_services
test_name: Terminate services
#
includes:
  - !include envfile.yml

stages:
#  0. Get available services
  - name: get_services
    request:
      url: "{get_services:s}"
      method: GET
      headers:
        content-type: application/json
    response:
      status_code: 200
      save:
        body:
          uuid: 0.uuid
#  1. Submit the valid service termination request to the REST API
  - name: delete_service
    request:
      url: "{instantiate_request:s}"
      method: DELETE
      headers:
        content-type: application/json
      json:
        instance_uuid: "{uuid:s}"
        request_type: "TERMINATE_SERVICE"
    response:
      status_code: 404 #200
    delay_after: 15
#  2. Keep checking the status of the request until the response contains a status field with value success (or failed)
  - name: get_instance
    request:
      url: "{instantiate_request:s}"
      method: GET
      headers:
        content-type: application/json
    response:
      status_code: 404
# 3. Check if the NS has been terminated on the VIM
  - name: get_openstack_token
    request:
      url: "{openstack_tokens:s}"
      method: POST
      headers:
        content-type: application/json
      json:
        auth:
          identity: 
            methods: ["password"]
            password:
              user:
                name: "tango"
                domain: 
                  id: "default"
                password: "t4ng0"
    response:
      status_code: 201
      save:
        headers:
          token: "x-subject-token"
# 3.1 Check if there are any stacks created
  - name: get_openstack_stacks
    request:
      url: "{openstack_stacks:s}"
      method: GET
      headers:
        x-auth-token: "{token:s}"
    response:
      status_code: 200
      body:
        stacks: []

