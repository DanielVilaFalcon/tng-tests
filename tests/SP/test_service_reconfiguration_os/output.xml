<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20190731 21:10:09.999" rpa="false">
<suite id="s1" name="Test" source="/home/eleni/NetBeansProjects/tng-tests/tests/SP/test_service_reconfiguration_os/test.robot">
<test id="s1-t1" name="Setting the SP Path">
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${SP_HOST}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:10.708" endtime="20190731 21:10:10.708"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:10:17.755" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20190731 21:10:10.708" endtime="20190731 21:10:17.755"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:17.756" endtime="20190731 21:10:17.756"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:10.707" endtime="20190731 21:10:17.756" critical="yes"></status>
</test>
<test id="s1-t2" name="Clean the Package Before Uploading">
<kw name="Get Packages" library="tnglib">
<doc>Returns info on all available packages.</doc>
<assign>
<var>@{PACKAGES}</var>
</assign>
<msg timestamp="20190731 21:10:23.276" level="INFO">@{PACKAGES} = [ True | [{'package_uuid': '0072ab96-1c9f-4bdd-a7cd-558c8d1ed137', 'name': 'cnf-1-no-sm', 'version': '0.1', 'created_at': '2019-07-29T14:51:13.228+00:00'}, {'package_uuid': '80605516-7ac1-4016-9a6d-9d...</msg>
<status status="PASS" starttime="20190731 21:10:17.758" endtime="20190731 21:10:23.276"></status>
</kw>
<kw name="${PACKAGE} IN [ @{PACKAGES[1]} ]" type="for">
<kw name="${PACKAGE} = {'package_uuid': '0072ab96-1c9f-4bdd-a7cd-558c8d1ed137', 'name': 'cnf-1-no-sm', 'version': '0.1', 'created_at': '2019-07-29T14:51:13.228+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:23.276" endtime="20190731 21:10:23.276"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:23.276" endtime="20190731 21:10:23.277"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '80605516-7ac1-4016-9a6d-9df2b7311617', 'name': 'test-ns-nsid2v', 'version': '0.1', 'created_at': '2019-07-30T10:57:52.332+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:23.277" endtime="20190731 21:10:23.277"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:23.277" endtime="20190731 21:10:23.277"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:23.276" endtime="20190731 21:10:23.277"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:17.757" endtime="20190731 21:10:23.277" critical="yes"></status>
</test>
<test id="s1-t3" name="Upload the NS Package">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}</arg>
</arguments>
<msg timestamp="20190731 21:10:23.278" level="INFO">../../../packages</msg>
<status status="PASS" starttime="20190731 21:10:23.278" endtime="20190731 21:10:23.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${NS_PACKAGE_NAME}</arg>
</arguments>
<msg timestamp="20190731 21:10:23.278" level="INFO">eu.5gtango.ns-squid-haproxy.0.1.tgo</msg>
<status status="PASS" starttime="20190731 21:10:23.278" endtime="20190731 21:10:23.278"></status>
</kw>
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${NS_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:10:32.960" level="INFO">${result} = (True, 'f6a6c224-d2a1-49b0-9b90-8bef2c36ca47')</msg>
<status status="PASS" starttime="20190731 21:10:23.278" endtime="20190731 21:10:32.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20190731 21:10:32.960" level="INFO">(True, 'f6a6c224-d2a1-49b0-9b90-8bef2c36ca47')</msg>
<status status="PASS" starttime="20190731 21:10:32.960" endtime="20190731 21:10:32.961"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:32.961" endtime="20190731 21:10:32.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PACKAGE_UUID}</arg>
<arg>${result[1]}</arg>
</arguments>
<msg timestamp="20190731 21:10:32.963" level="INFO">${PACKAGE_UUID} = f6a6c224-d2a1-49b0-9b90-8bef2c36ca47</msg>
<status status="PASS" starttime="20190731 21:10:32.962" endtime="20190731 21:10:32.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${PACKAGE_UUID}</arg>
</arguments>
<msg timestamp="20190731 21:10:32.964" level="INFO">f6a6c224-d2a1-49b0-9b90-8bef2c36ca47</msg>
<status status="PASS" starttime="20190731 21:10:32.963" endtime="20190731 21:10:32.964"></status>
</kw>
<kw name="Map Package On Service" library="tnglib">
<doc>Return the uuid of a network service based on a package uuid.</doc>
<arguments>
<arg>${result[1]}</arg>
</arguments>
<assign>
<var>${service}</var>
</assign>
<msg timestamp="20190731 21:10:39.150" level="INFO">${service} = (True, '8eec573f-afcd-4f5f-b239-9584b92e04a6')</msg>
<status status="PASS" starttime="20190731 21:10:32.964" endtime="20190731 21:10:39.150"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${service[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:39.151" endtime="20190731 21:10:39.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVICE_UUID}</arg>
<arg>${service[1]}</arg>
</arguments>
<msg timestamp="20190731 21:10:39.153" level="INFO">${SERVICE_UUID} = 8eec573f-afcd-4f5f-b239-9584b92e04a6</msg>
<status status="PASS" starttime="20190731 21:10:39.151" endtime="20190731 21:10:39.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SERVICE_UUID}</arg>
</arguments>
<msg timestamp="20190731 21:10:39.153" level="INFO">8eec573f-afcd-4f5f-b239-9584b92e04a6</msg>
<status status="PASS" starttime="20190731 21:10:39.153" endtime="20190731 21:10:39.153"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:23.277" endtime="20190731 21:10:39.154" critical="yes"></status>
</test>
<test id="s1-t4" name="Create Runtime Policy">
<kw name="Create Policy" library="tnglib">
<doc>Uploads a policy descriptor.</doc>
<arguments>
<arg>${POLICIES_SOURCE_DIR}/${POLICY_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:10:45.729" level="INFO">${result} = (True, 'c1ca72b5-d78c-4658-b583-eaf19bd042e6')</msg>
<status status="PASS" starttime="20190731 21:10:39.154" endtime="20190731 21:10:45.729"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:45.729" endtime="20190731 21:10:45.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${POLICY_UUID}</arg>
<arg>${result[1]}</arg>
</arguments>
<msg timestamp="20190731 21:10:45.732" level="INFO">${POLICY_UUID} = c1ca72b5-d78c-4658-b583-eaf19bd042e6</msg>
<status status="PASS" starttime="20190731 21:10:45.730" endtime="20190731 21:10:45.732"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:39.154" endtime="20190731 21:10:45.732" critical="yes"></status>
</test>
<test id="s1-t5" name="Define Runtime Policy as Default">
<kw name="Define Policy As Default" library="tnglib">
<doc>Define a Runtime Policy as default.</doc>
<arguments>
<arg>${POLICY_UUID}</arg>
<arg>service_uuid=${SERVICE_UUID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:10:48.671" level="INFO">${result} = (True, 'Policy metadata are sucesfully updated')</msg>
<status status="PASS" starttime="20190731 21:10:45.733" endtime="20190731 21:10:48.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:10:48.671" endtime="20190731 21:10:48.671"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:45.732" endtime="20190731 21:10:48.671" critical="yes"></status>
</test>
<test id="s1-t6" name="Deploying Service">
<kw name="Service Instantiate" library="tnglib">
<doc>Makes a request to instantiate a service.</doc>
<arguments>
<arg>${SERVICE_UUID}</arg>
</arguments>
<assign>
<var>${init}</var>
</assign>
<msg timestamp="20190731 21:10:54.404" level="INFO">${init} = (True, '6f42738a-fc18-4170-a4ff-4167c02cc777')</msg>
<status status="PASS" starttime="20190731 21:10:48.672" endtime="20190731 21:10:54.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${init}</arg>
</arguments>
<msg timestamp="20190731 21:10:54.405" level="INFO">(True, '6f42738a-fc18-4170-a4ff-4167c02cc777')</msg>
<status status="PASS" starttime="20190731 21:10:54.404" endtime="20190731 21:10:54.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${REQUEST}</arg>
<arg>${init[1]}</arg>
</arguments>
<msg timestamp="20190731 21:10:54.407" level="INFO">${REQUEST} = 6f42738a-fc18-4170-a4ff-4167c02cc777</msg>
<status status="PASS" starttime="20190731 21:10:54.405" endtime="20190731 21:10:54.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<msg timestamp="20190731 21:10:54.407" level="INFO">6f42738a-fc18-4170-a4ff-4167c02cc777</msg>
<status status="PASS" starttime="20190731 21:10:54.407" endtime="20190731 21:10:54.408"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:48.671" endtime="20190731 21:10:54.408" critical="yes"></status>
</test>
<test id="s1-t7" name="Wait For Ready">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10 min</arg>
<arg>5 sec</arg>
<arg>Check Status</arg>
</arguments>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:10:59.950" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:10:54.410" endtime="20190731 21:10:59.950"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:10:59.951" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:10:59.951" endtime="20190731 21:10:59.951"></status>
</kw>
<status status="FAIL" starttime="20190731 21:10:54.409" endtime="20190731 21:10:59.952"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:11:10.583" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:11:04.953" endtime="20190731 21:11:10.583"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:11:10.584" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:11:10.583" endtime="20190731 21:11:10.584"></status>
</kw>
<status status="FAIL" starttime="20190731 21:11:04.952" endtime="20190731 21:11:10.584"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:11:21.105" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:11:15.585" endtime="20190731 21:11:21.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:11:21.106" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:11:21.105" endtime="20190731 21:11:21.106"></status>
</kw>
<status status="FAIL" starttime="20190731 21:11:15.584" endtime="20190731 21:11:21.106"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:11:31.690" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:11:26.107" endtime="20190731 21:11:31.690"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:11:31.692" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:11:31.691" endtime="20190731 21:11:31.692"></status>
</kw>
<status status="FAIL" starttime="20190731 21:11:26.106" endtime="20190731 21:11:31.693"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:11:42.185" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:11:36.694" endtime="20190731 21:11:42.185"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:11:42.187" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:11:42.185" endtime="20190731 21:11:42.187"></status>
</kw>
<status status="FAIL" starttime="20190731 21:11:36.693" endtime="20190731 21:11:42.187"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:11:47.733" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:11:47.189" endtime="20190731 21:11:47.733"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:11:47.735" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:11:47.734" endtime="20190731 21:11:47.735"></status>
</kw>
<status status="FAIL" starttime="20190731 21:11:47.188" endtime="20190731 21:11:47.735"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:11:58.309" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:11:52.736" endtime="20190731 21:11:58.309"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:11:58.310" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:11:58.310" endtime="20190731 21:11:58.311"></status>
</kw>
<status status="FAIL" starttime="20190731 21:11:52.736" endtime="20190731 21:11:58.311"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:03.721" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:03.312" endtime="20190731 21:12:03.721"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:03.722" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:03.721" endtime="20190731 21:12:03.722"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:03.311" endtime="20190731 21:12:03.722"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:14.291" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:08.723" endtime="20190731 21:12:14.291"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:14.293" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:14.292" endtime="20190731 21:12:14.293"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:08.722" endtime="20190731 21:12:14.293"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:19.816" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:19.294" endtime="20190731 21:12:19.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:19.817" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:19.816" endtime="20190731 21:12:19.817"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:19.294" endtime="20190731 21:12:19.818"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:25.442" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:24.819" endtime="20190731 21:12:25.442"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:25.443" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:25.442" endtime="20190731 21:12:25.444"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:24.818" endtime="20190731 21:12:25.444"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:36.027" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:30.445" endtime="20190731 21:12:36.028"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:36.030" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:36.028" endtime="20190731 21:12:36.030"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:30.445" endtime="20190731 21:12:36.031"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:41.466" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:41.032" endtime="20190731 21:12:41.466"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:41.468" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:41.467" endtime="20190731 21:12:41.469"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:41.031" endtime="20190731 21:12:41.469"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:52.012" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:46.470" endtime="20190731 21:12:52.012"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:52.014" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:52.012" endtime="20190731 21:12:52.014"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:46.470" endtime="20190731 21:12:52.014"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:12:57.508" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:12:57.015" endtime="20190731 21:12:57.508"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:12:57.510" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:12:57.508" endtime="20190731 21:12:57.510"></status>
</kw>
<status status="FAIL" starttime="20190731 21:12:57.015" endtime="20190731 21:12:57.510"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:13:02.985" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:02.512" endtime="20190731 21:13:02.985"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:13:02.986" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:13:02.985" endtime="20190731 21:13:02.986"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:02.511" endtime="20190731 21:13:02.987"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:13:08.457" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:07.988" endtime="20190731 21:13:08.457"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:13:08.459" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:13:08.458" endtime="20190731 21:13:08.459"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:07.987" endtime="20190731 21:13:08.460"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:13:18.944" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:13.460" endtime="20190731 21:13:18.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:13:18.946" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:13:18.944" endtime="20190731 21:13:18.946"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:13.460" endtime="20190731 21:13:18.946"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:13:24.434" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:23.948" endtime="20190731 21:13:24.434"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:13:24.435" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:13:24.434" endtime="20190731 21:13:24.435"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:23.947" endtime="20190731 21:13:24.435"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:13:29.862" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:29.437" endtime="20190731 21:13:29.862"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:13:29.863" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:13:29.862" endtime="20190731 21:13:29.863"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:29.436" endtime="20190731 21:13:29.864"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:13:40.518" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:34.865" endtime="20190731 21:13:40.518"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:13:40.519" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:13:40.518" endtime="20190731 21:13:40.519"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:34.864" endtime="20190731 21:13:40.519"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:13:51.109" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:45.520" endtime="20190731 21:13:51.109"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:13:51.110" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:13:51.109" endtime="20190731 21:13:51.110"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:45.519" endtime="20190731 21:13:51.110"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:14:01.721" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:13:56.111" endtime="20190731 21:14:01.721"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:14:01.723" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:14:01.722" endtime="20190731 21:14:01.723"></status>
</kw>
<status status="FAIL" starttime="20190731 21:13:56.111" endtime="20190731 21:14:01.723"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:14:08.194" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:14:06.724" endtime="20190731 21:14:08.194"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:14:08.196" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:14:08.195" endtime="20190731 21:14:08.196"></status>
</kw>
<status status="FAIL" starttime="20190731 21:14:06.723" endtime="20190731 21:14:08.196"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:14:13.686" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:14:13.198" endtime="20190731 21:14:13.686"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:14:13.687" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:14:13.686" endtime="20190731 21:14:13.687"></status>
</kw>
<status status="FAIL" starttime="20190731 21:14:13.197" endtime="20190731 21:14:13.687"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:14:19.119" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:14:18.689" endtime="20190731 21:14:19.119"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:14:19.121" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:14:19.120" endtime="20190731 21:14:19.121"></status>
</kw>
<status status="FAIL" starttime="20190731 21:14:18.688" endtime="20190731 21:14:19.121"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:14:29.688" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:14:24.123" endtime="20190731 21:14:29.689"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:14:29.694" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:14:29.689" endtime="20190731 21:14:29.695"></status>
</kw>
<status status="FAIL" starttime="20190731 21:14:24.122" endtime="20190731 21:14:29.696"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:14:40.239" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:14:34.697" endtime="20190731 21:14:40.239"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:14:40.241" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:14:40.239" endtime="20190731 21:14:40.241"></status>
</kw>
<status status="FAIL" starttime="20190731 21:14:34.696" endtime="20190731 21:14:40.242"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:14:50.745" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:14:45.243" endtime="20190731 21:14:50.745"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:14:50.747" level="FAIL">READY != INSTANTIATING</msg>
<status status="FAIL" starttime="20190731 21:14:50.746" endtime="20190731 21:14:50.747"></status>
</kw>
<status status="FAIL" starttime="20190731 21:14:45.242" endtime="20190731 21:14:50.747"></status>
</kw>
<kw name="Check Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:15:01.227" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:14:55.749" endtime="20190731 21:15:01.228"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:15:01.228" endtime="20190731 21:15:01.230"></status>
</kw>
<status status="PASS" starttime="20190731 21:14:55.748" endtime="20190731 21:15:01.230"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:54.409" endtime="20190731 21:15:01.231"></status>
</kw>
<kw name="Set SIU">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:15:01.677" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:15:01.231" endtime="20190731 21:15:01.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TERMINATE}</arg>
<arg>${status[1]['instance_uuid']}</arg>
</arguments>
<msg timestamp="20190731 21:15:01.678" level="INFO">${TERMINATE} = d965785a-311f-4cc4-8dab-30ccedf2eb98</msg>
<status status="PASS" starttime="20190731 21:15:01.677" endtime="20190731 21:15:01.678"></status>
</kw>
<status status="PASS" starttime="20190731 21:15:01.231" endtime="20190731 21:15:01.678"></status>
</kw>
<status status="PASS" starttime="20190731 21:10:54.408" endtime="20190731 21:15:01.678" critical="yes"></status>
</test>
<test id="s1-t8" name="Get Service Instance">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${init}</var>
</assign>
<msg timestamp="20190731 21:15:02.108" level="INFO">${init} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:15:01.678" endtime="20190731 21:15:02.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${init}</arg>
</arguments>
<msg timestamp="20190731 21:15:02.109" level="INFO">(True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:10:54.101Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error': '', 'flavor': None, 'function_uuids': None, 'id': '6f42738a-fc18-4170-a4ff-4167c02cc777', 'ingresses': [], 'instance_uuid': 'd965785a-311f-4cc4-8dab-30ccedf2eb98', 'mapping': [], 'name': '', 'number_of_instances': None, 'params': [], 'request_type': 'CREATE_SERVICE', 'scaling_type': None, 'sla_id': '', 'status': 'READY', 'updated_at': '2019-07-31T18:14:57.493Z', 'vim_uuid': '', 'vnf_uuid': '', 'vnfd_uuid': '', 'service': {'uuid': '8eec573f-afcd-4f5f-b239-9584b92e04a6', 'vendor': 'eu.5gtango', 'name': 'ns-squid-haproxy', 'version': '0.2'}})</msg>
<status status="PASS" starttime="20190731 21:15:02.109" endtime="20190731 21:15:02.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SERVICE_INSTANCE_UUID}</arg>
<arg>${init[1]['instance_uuid']}</arg>
</arguments>
<msg timestamp="20190731 21:15:02.113" level="INFO">${SERVICE_INSTANCE_UUID} = d965785a-311f-4cc4-8dab-30ccedf2eb98</msg>
<status status="PASS" starttime="20190731 21:15:02.110" endtime="20190731 21:15:02.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SERVICE_INSTANCE_UUID}</arg>
</arguments>
<msg timestamp="20190731 21:15:02.114" level="INFO">d965785a-311f-4cc4-8dab-30ccedf2eb98</msg>
<status status="PASS" starttime="20190731 21:15:02.113" endtime="20190731 21:15:02.114"></status>
</kw>
<status status="PASS" starttime="20190731 21:15:01.678" endtime="20190731 21:15:02.114" critical="yes"></status>
</test>
<test id="s1-t9" name="Check monitoring rules">
<kw name="Get Policy Rules" library="tnglib">
<doc>Returns the number of activate policy monitoring rules.</doc>
<arguments>
<arg>${SERVICE_INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:15:03.477" level="INFO">${result} = (True, '3')</msg>
<status status="PASS" starttime="20190731 21:15:02.115" endtime="20190731 21:15:03.477"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:15:03.477" endtime="20190731 21:15:03.478"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result[1]}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" starttime="20190731 21:15:03.478" endtime="20190731 21:15:03.478"></status>
</kw>
<status status="PASS" starttime="20190731 21:15:02.114" endtime="20190731 21:15:03.478" critical="yes"></status>
</test>
<test id="s1-t10" name="Wait for monitoring rules satisfaction">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>100s</arg>
</arguments>
<msg timestamp="20190731 21:16:43.479" level="INFO">Slept 1 minute 40 seconds</msg>
<status status="PASS" starttime="20190731 21:15:03.479" endtime="20190731 21:16:43.479"></status>
</kw>
<status status="PASS" starttime="20190731 21:15:03.479" endtime="20190731 21:16:43.480" critical="yes"></status>
</test>
<test id="s1-t11" name="Check that scaling action has been triggered by the policy manager">
<kw name="Get Policy Action" library="tnglib">
<doc>Checks if exists any policy action generated for the given nsr_id.</doc>
<arguments>
<arg>${SERVICE_INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:16:44.139" level="INFO">${result} = (True, True)</msg>
<status status="PASS" starttime="20190731 21:16:43.481" endtime="20190731 21:16:44.139"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:16:44.140" endtime="20190731 21:16:44.140"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[1]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:16:44.140" endtime="20190731 21:16:44.140"></status>
</kw>
<status status="PASS" starttime="20190731 21:16:43.480" endtime="20190731 21:16:44.140" critical="yes"></status>
</test>
<test id="s1-t12" name="Deactivate Runtime Policy">
<kw name="Deactivate Policy" library="tnglib">
<doc>Deactivates an enforced policy.</doc>
<arguments>
<arg>${SERVICE_INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:16:45.727" level="INFO">${result} = (True, {'code': 'SUCCESS', 'message': 'Policy is succesfully deactivated', 'returnobject': True})</msg>
<status status="PASS" starttime="20190731 21:16:44.141" endtime="20190731 21:16:45.727"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:16:45.727" endtime="20190731 21:16:45.728"></status>
</kw>
<status status="PASS" starttime="20190731 21:16:44.141" endtime="20190731 21:16:45.728" critical="yes"></status>
</test>
<test id="s1-t13" name="Wait for Mano execution of elasticity action">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>180s</arg>
</arguments>
<msg timestamp="20190731 21:19:45.730" level="INFO">Slept 3 minutes</msg>
<status status="PASS" starttime="20190731 21:16:45.729" endtime="20190731 21:19:45.731"></status>
</kw>
<status status="PASS" starttime="20190731 21:16:45.729" endtime="20190731 21:19:45.731" critical="yes"></status>
</test>
<test id="s1-t14" name="Check that Mano has succesfully scaled out requested vnf">
<kw name="Get Service Vnfrs" library="tnglib">
<doc>Returns the number of a vnf records of a specific network service.</doc>
<arguments>
<arg>${SERVICE_INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:19:46.174" level="INFO">${result} = (True, 3)</msg>
<status status="PASS" starttime="20190731 21:19:45.733" endtime="20190731 21:19:46.174"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:19:46.175" endtime="20190731 21:19:46.175"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>int(${result[1]}) &gt; 2</arg>
</arguments>
<status status="PASS" starttime="20190731 21:19:46.176" endtime="20190731 21:19:46.176"></status>
</kw>
<status status="PASS" starttime="20190731 21:19:45.732" endtime="20190731 21:19:46.177" critical="yes"></status>
</test>
<test id="s1-t15" name="Terminate Service">
<kw name="Service Terminate" library="tnglib">
<doc>Makes a request to terminate a service.</doc>
<arguments>
<arg>${SERVICE_INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${ter}</var>
</assign>
<msg timestamp="20190731 21:19:51.721" level="INFO">${ter} = (True, '12694104-d971-46d3-979d-72a100d13796')</msg>
<status status="PASS" starttime="20190731 21:19:46.178" endtime="20190731 21:19:51.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ter}</arg>
</arguments>
<msg timestamp="20190731 21:19:51.722" level="INFO">(True, '12694104-d971-46d3-979d-72a100d13796')</msg>
<status status="PASS" starttime="20190731 21:19:51.721" endtime="20190731 21:19:51.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
<arg>${ter[1]}</arg>
</arguments>
<msg timestamp="20190731 21:19:51.724" level="INFO">${TERM_REQ} = 12694104-d971-46d3-979d-72a100d13796</msg>
<status status="PASS" starttime="20190731 21:19:51.722" endtime="20190731 21:19:51.725"></status>
</kw>
<status status="PASS" starttime="20190731 21:19:46.177" endtime="20190731 21:19:51.725" critical="yes"></status>
</test>
<test id="s1-t16" name="Wait For Terminate Ready">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>5 sec</arg>
<arg>Check Terminate</arg>
</arguments>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:19:57.224" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:19:51.727" endtime="20190731 21:19:57.224"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:19:57.224" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:19:57.224" endtime="20190731 21:19:57.224"></status>
</kw>
<status status="FAIL" starttime="20190731 21:19:51.726" endtime="20190731 21:19:57.225"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:20:07.735" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:20:02.226" endtime="20190731 21:20:07.735"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:20:07.736" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:20:07.736" endtime="20190731 21:20:07.736"></status>
</kw>
<status status="FAIL" starttime="20190731 21:20:02.225" endtime="20190731 21:20:07.736"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:20:18.350" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:20:12.738" endtime="20190731 21:20:18.350"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:20:18.351" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:20:18.350" endtime="20190731 21:20:18.351"></status>
</kw>
<status status="FAIL" starttime="20190731 21:20:12.737" endtime="20190731 21:20:18.351"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:20:23.891" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:20:23.353" endtime="20190731 21:20:23.891"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:20:23.892" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:20:23.891" endtime="20190731 21:20:23.892"></status>
</kw>
<status status="FAIL" starttime="20190731 21:20:23.352" endtime="20190731 21:20:23.892"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:20:34.466" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:20:28.894" endtime="20190731 21:20:34.466"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:20:34.467" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:20:34.467" endtime="20190731 21:20:34.467"></status>
</kw>
<status status="FAIL" starttime="20190731 21:20:28.893" endtime="20190731 21:20:34.467"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:20:45.005" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:20:39.469" endtime="20190731 21:20:45.005"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:20:45.006" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:20:45.006" endtime="20190731 21:20:45.006"></status>
</kw>
<status status="FAIL" starttime="20190731 21:20:39.468" endtime="20190731 21:20:45.007"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:20:55.590" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:20:50.008" endtime="20190731 21:20:55.590"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:20:55.591" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:20:55.590" endtime="20190731 21:20:55.591"></status>
</kw>
<status status="FAIL" starttime="20190731 21:20:50.007" endtime="20190731 21:20:55.591"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:06.100" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:00.593" endtime="20190731 21:21:06.100"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:06.101" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:06.100" endtime="20190731 21:21:06.101"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:00.592" endtime="20190731 21:21:06.102"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:11.603" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:11.103" endtime="20190731 21:21:11.603"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:11.605" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:11.604" endtime="20190731 21:21:11.605"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:11.102" endtime="20190731 21:21:11.606"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:17.103" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:16.607" endtime="20190731 21:21:17.103"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:17.105" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:17.104" endtime="20190731 21:21:17.105"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:16.606" endtime="20190731 21:21:17.105"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:27.806" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:22.107" endtime="20190731 21:21:27.806"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:27.807" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:27.806" endtime="20190731 21:21:27.807"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:22.106" endtime="20190731 21:21:27.807"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:33.255" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:32.811" endtime="20190731 21:21:33.256"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:33.258" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:33.256" endtime="20190731 21:21:33.258"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:32.808" endtime="20190731 21:21:33.258"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:43.762" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:38.259" endtime="20190731 21:21:43.762"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:43.763" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:43.762" endtime="20190731 21:21:43.763"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:38.259" endtime="20190731 21:21:43.764"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:54.265" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:48.765" endtime="20190731 21:21:54.265"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:54.267" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:54.266" endtime="20190731 21:21:54.267"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:48.764" endtime="20190731 21:21:54.267"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:21:59.740" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:21:59.268" endtime="20190731 21:21:59.740"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:21:59.741" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:21:59.740" endtime="20190731 21:21:59.742"></status>
</kw>
<status status="FAIL" starttime="20190731 21:21:59.267" endtime="20190731 21:21:59.742"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:22:10.307" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:22:04.743" endtime="20190731 21:22:10.307"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:22:10.308" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:22:10.307" endtime="20190731 21:22:10.308"></status>
</kw>
<status status="FAIL" starttime="20190731 21:22:04.742" endtime="20190731 21:22:10.308"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:22:35.283" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:22:15.310" endtime="20190731 21:22:35.283"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:22:35.283" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:22:35.283" endtime="20190731 21:22:35.284"></status>
</kw>
<status status="FAIL" starttime="20190731 21:22:15.309" endtime="20190731 21:22:35.284"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:22:46.032" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:22:40.285" endtime="20190731 21:22:46.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:22:46.033" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:22:46.032" endtime="20190731 21:22:46.033"></status>
</kw>
<status status="FAIL" starttime="20190731 21:22:40.284" endtime="20190731 21:22:46.033"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:22:51.528" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:22:51.034" endtime="20190731 21:22:51.528"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:22:51.529" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:22:51.529" endtime="20190731 21:22:51.529"></status>
</kw>
<status status="FAIL" starttime="20190731 21:22:51.033" endtime="20190731 21:22:51.530"></status>
</kw>
<kw name="Check Terminate">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${TERM_REQ}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190731 21:22:56.973" level="INFO">${status} = (True, {'blacklist': [], 'callback': '', 'created_at': '2019-07-31T18:19:51.589Z', 'vim_list': [], 'customer_email': '', 'customer_name': '', 'description': '', 'duration': 0.0, 'egresses': [], 'error...</msg>
<status status="PASS" starttime="20190731 21:22:56.531" endtime="20190731 21:22:56.974"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${status[1]['status']}</arg>
</arguments>
<msg timestamp="20190731 21:22:56.975" level="FAIL">READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:22:56.974" endtime="20190731 21:22:56.975"></status>
</kw>
<status status="FAIL" starttime="20190731 21:22:56.530" endtime="20190731 21:22:56.976"></status>
</kw>
<msg timestamp="20190731 21:22:56.976" level="FAIL">Keyword 'Check Terminate' failed after retrying for 3 minutes. The last error was: READY != TERMINATING</msg>
<status status="FAIL" starttime="20190731 21:19:51.726" endtime="20190731 21:22:56.976"></status>
</kw>
<status status="FAIL" starttime="20190731 21:19:51.725" endtime="20190731 21:22:56.977" critical="yes">Keyword 'Check Terminate' failed after retrying for 3 minutes. The last error was: READY != TERMINATING</status>
</test>
<test id="s1-t17" name="Delete Runtime Policy">
<kw name="Delete Policy" library="tnglib">
<doc>Deletes a policy descriptor.</doc>
<arguments>
<arg>${POLICY_UUID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:22:57.579" level="INFO">${result} = (True, 'c1ca72b5-d78c-4658-b583-eaf19bd042e6')</msg>
<status status="PASS" starttime="20190731 21:22:56.978" endtime="20190731 21:22:57.579"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:22:57.579" endtime="20190731 21:22:57.580"></status>
</kw>
<status status="PASS" starttime="20190731 21:22:56.977" endtime="20190731 21:22:57.580" critical="yes"></status>
</test>
<test id="s1-t18" name="Remove the Package">
<kw name="Remove Package" library="tnglib">
<doc>Removes one package from the catalogue.</doc>
<arguments>
<arg>${PACKAGE_UUID}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 21:22:58.127" level="INFO">${result} = (True, 'f6a6c224-d2a1-49b0-9b90-8bef2c36ca47')</msg>
<status status="PASS" starttime="20190731 21:22:57.581" endtime="20190731 21:22:58.127"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20190731 21:22:58.127" endtime="20190731 21:22:58.128"></status>
</kw>
<status status="PASS" starttime="20190731 21:22:57.581" endtime="20190731 21:22:58.128" critical="yes"></status>
</test>
<doc>Test suite template for deploy and undeploy with elasticity policy enforcement at Opestack</doc>
<status status="FAIL" starttime="20190731 21:10:10.000" endtime="20190731 21:22:58.132"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="1">Critical Tests</stat>
<stat pass="17" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="17" fail="1" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
