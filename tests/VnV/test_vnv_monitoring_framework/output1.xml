<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190729 17:37:23.166" generator="Robot 3.1.2 (Python 3.5.2 on linux)">
<suite name="Test" id="s1" source="/home/panos/tango-dist/tng-tests/tests/VnV/test_vnv_monitoring_framework/test.robot">
<test name="Setting the VnV Path" id="s1-t1">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${from_date}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:37:23.693">${from_date} = 2019-07-29 17:37:23.693</msg>
<status endtime="20190729 17:37:23.693" starttime="20190729 17:37:23.693" status="PASS"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${from_date}</arg>
</arguments>
<msg level="INFO" timestamp="20190729 17:37:23.694">${from_date} = 2019-07-29 17:37:23.693</msg>
<status endtime="20190729 17:37:23.694" starttime="20190729 17:37:23.694" status="PASS"></status>
</kw>
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${VNV_HOST}</arg>
</arguments>
<status endtime="20190729 17:37:23.694" starttime="20190729 17:37:23.694" status="PASS"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:37:24.029">${result} = True</msg>
<status endtime="20190729 17:37:24.029" starttime="20190729 17:37:23.694" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status endtime="20190729 17:37:24.029" starttime="20190729 17:37:24.029" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:24.029" starttime="20190729 17:37:23.693" status="PASS" critical="yes"></status>
</test>
<test name="Clean the Packages" id="s1-t2">
<kw name="Get Packages" library="tnglib">
<doc>Returns info on all available packages.</doc>
<assign>
<var>@{PACKAGES}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:37:28.680">@{PACKAGES} = [ True | [{'name': 'media-hls-test', 'package_uuid': '6db5dd57-d270-426e-aa08-3fb62aa21d41', 'version': '0.1', 'created_at': '2019-07-17T07:33:59.875+00:00'}, {'name': 'ns-mediapilot-service', 'packag...</msg>
<status endtime="20190729 17:37:28.680" starttime="20190729 17:37:24.030" status="PASS"></status>
</kw>
<kw name="${PACKAGE} IN [ @{PACKAGES[1]} ]" type="for">
<kw name="${PACKAGE} = {'name': 'media-hls-test', 'package_uuid': '6db5dd57-d270-426e-aa08-3fb62aa21d41', 'version': '0.1', 'created_at': '2019-07-17T07:33:59.875+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:28.681" starttime="20190729 17:37:28.680" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:28.681" starttime="20190729 17:37:28.680" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'ns-mediapilot-service', 'package_uuid': '40e403a6-7c34-4ce5-85fd-1b95c2e0079f', 'version': '0.5', 'created_at': '2019-07-25T16:40:29.423+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<kw name="Remove Package" library="tnglib">
<doc>Removes one package from the catalogue.</doc>
<arguments>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:33.122" starttime="20190729 17:37:28.682" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:33.122" starttime="20190729 17:37:28.681" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:33.122" starttime="20190729 17:37:28.681" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'media-performance-test', 'package_uuid': '003d546a-1e8a-4de9-934a-7d32f355ae27', 'version': '0.1', 'created_at': '2019-07-25T16:40:33.531+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<kw name="Remove Package" library="tnglib">
<doc>Removes one package from the catalogue.</doc>
<arguments>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.513" starttime="20190729 17:37:33.123" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.514" starttime="20190729 17:37:33.122" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.514" starttime="20190729 17:37:33.122" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'generic-probes-test-pingonly-dependency-2-probes', 'package_uuid': '9cf31df7-d805-4b87-bb09-6cba8a4a2b5b', 'version': '0.1', 'created_at': '2019-07-26T13:28:23.147+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.514" starttime="20190729 17:37:37.514" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.515" starttime="20190729 17:37:37.514" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'generic-probes-test-pingonly-single-ns-multiple-td-1', 'package_uuid': '217d6719-2f73-4ad1-b241-8e609d3cf0da', 'version': '0.1', 'created_at': '2019-07-26T15:17:38.948+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.515" starttime="20190729 17:37:37.515" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.515" starttime="20190729 17:37:37.515" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'generic-probes-test-pingonly-single-ns-multiple-td-2', 'package_uuid': '6b41a5a4-1a74-42f2-9a18-0d724b848d8c', 'version': '0.1', 'created_at': '2019-07-26T15:17:42.983+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.516" starttime="20190729 17:37:37.515" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.516" starttime="20190729 17:37:37.515" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'test-ns-nsid1v-1-tt-n-td-tt', 'package_uuid': 'ae0d2395-96e6-4366-b74b-90a6e88caedf', 'version': '0.2', 'created_at': '2019-07-26T15:17:47.046+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.517" starttime="20190729 17:37:37.516" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.517" starttime="20190729 17:37:37.516" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'ns-nsid1v-1-td-tt-n-ns-tt-1', 'package_uuid': 'cbd39886-5976-4bc8-9a94-7fc50e944178', 'version': '0.2', 'created_at': '2019-07-26T17:41:39.169+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.517" starttime="20190729 17:37:37.517" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.517" starttime="20190729 17:37:37.517" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'ns-nsid1v-1-td-tt-n-ns-tt-2', 'package_uuid': '55d4c3e5-4ebc-4ff9-b91b-02922048c35e', 'version': '0.2', 'created_at': '2019-07-26T17:41:43.047+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.518" starttime="20190729 17:37:37.518" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.518" starttime="20190729 17:37:37.517" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'generic-probes-test-pingonly-single-td-multiple-ns', 'package_uuid': '37b338ff-28c8-4314-814a-35f3eee82021', 'version': '0.1', 'created_at': '2019-07-26T17:41:46.813+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.519" starttime="20190729 17:37:37.518" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.519" starttime="20190729 17:37:37.518" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'generic-probes-test-pingonly-2-parallel-probes', 'package_uuid': 'b3709126-9664-42ee-a950-e5326870a274', 'version': '0.1', 'created_at': '2019-07-29T13:26:43.129+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.519" starttime="20190729 17:37:37.519" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.519" starttime="20190729 17:37:37.519" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'test-ns-nsid1v-sonata-no-tags', 'package_uuid': '1cdf35f2-ee07-4ba2-9cde-0f6afd32e5de', 'version': '0.2', 'created_at': '2019-07-29T13:40:32.084+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.520" starttime="20190729 17:37:37.520" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.520" starttime="20190729 17:37:37.520" status="PASS"></status>
</kw>
<kw name="${PACKAGE} = {'name': 'generic-probes-test-pingonly-2-instances-probes', 'package_uuid': 'f465f6aa-d77a-442c-a87a-70935c611529', 'version': '0.1', 'created_at': '2019-07-29T13:40:36.156+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status endtime="20190729 17:37:37.521" starttime="20190729 17:37:37.520" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.521" starttime="20190729 17:37:37.520" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.521" starttime="20190729 17:37:28.680" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:37.521" starttime="20190729 17:37:24.030" status="PASS" critical="yes"></status>
</test>
<test name="Upload the NS Package" id="s1-t3">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${NS_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:37:45.774">${result} = (True, '3f6b73f8-7294-4598-9a52-d59230766ffa')</msg>
<status endtime="20190729 17:37:45.774" starttime="20190729 17:37:37.522" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status endtime="20190729 17:37:45.775" starttime="20190729 17:37:45.774" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:45.775" starttime="20190729 17:37:37.521" status="PASS" critical="yes"></status>
</test>
<test name="Upload the TST Package" id="s1-t4">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${TST_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:37:50.489">${result} = (True, '19f11862-4c33-49b4-9909-340db9180864')</msg>
<status endtime="20190729 17:37:50.489" starttime="20190729 17:37:45.775" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result[1]}</arg>
</arguments>
<msg level="INFO" timestamp="20190729 17:37:50.491">19f11862-4c33-49b4-9909-340db9180864</msg>
<status endtime="20190729 17:37:50.491" starttime="20190729 17:37:50.490" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status endtime="20190729 17:37:50.493" starttime="20190729 17:37:50.492" status="PASS"></status>
</kw>
<status endtime="20190729 17:37:50.493" starttime="20190729 17:37:45.775" status="PASS" critical="yes"></status>
</test>
<test name="Wait For Service Instance Ready" id="s1-t5">
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${SP_HOST}</arg>
</arguments>
<status endtime="20190729 17:37:50.496" starttime="20190729 17:37:50.496" status="PASS"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:37:54.882">${result} = True</msg>
<status endtime="20190729 17:37:54.882" starttime="20190729 17:37:50.497" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status endtime="20190729 17:37:54.883" starttime="20190729 17:37:54.883" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>120</arg>
</arguments>
<msg level="INFO" timestamp="20190729 17:39:54.884">Slept 2 minutes</msg>
<status endtime="20190729 17:39:54.884" starttime="20190729 17:37:54.883" status="PASS"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3 min</arg>
<arg>1 sec</arg>
<arg>Check Create Service Request</arg>
</arguments>
<kw name="Check Create Service Request">
<kw name="Get Requests" library="tnglib">
<doc>Returns info on all requests.</doc>
<assign>
<var>${requests}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:39:59.611">${requests} = (True, [{'request_uuid': '186d9bd8-df85-4d5c-bf39-45d26f39a21a', 'request_type': 'CREATE_SERVICE', 'instance_uuid': 'aa71f0c7-49a3-43ec-84c8-57b76b71c107', 'status': 'READY', 'created_at': '2019-07-29...</msg>
<status endtime="20190729 17:39:59.611" starttime="20190729 17:39:54.886" status="PASS"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${CREATE_SERVICE}</arg>
<arg>${requests[1][0]['request_type']}</arg>
</arguments>
<status endtime="20190729 17:39:59.612" starttime="20190729 17:39:59.611" status="PASS"></status>
</kw>
<status endtime="20190729 17:39:59.613" starttime="20190729 17:39:54.885" status="PASS"></status>
</kw>
<status endtime="20190729 17:39:59.613" starttime="20190729 17:39:54.884" status="PASS"></status>
</kw>
<kw name="Get Requests" library="tnglib">
<doc>Returns info on all requests.</doc>
<assign>
<var>${request_list}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:00.302">${request_list} = (True, [{'request_uuid': '186d9bd8-df85-4d5c-bf39-45d26f39a21a', 'request_type': 'CREATE_SERVICE', 'instance_uuid': 'aa71f0c7-49a3-43ec-84c8-57b76b71c107', 'status': 'READY', 'created_at': '2019-07-29...</msg>
<status endtime="20190729 17:40:00.302" starttime="20190729 17:39:59.613" status="PASS"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${REQUEST}</arg>
<arg>${request_list[1][0]['request_uuid']}</arg>
</arguments>
<msg level="INFO" timestamp="20190729 17:40:00.305">${REQUEST} = 186d9bd8-df85-4d5c-bf39-45d26f39a21a</msg>
<status endtime="20190729 17:40:00.305" starttime="20190729 17:40:00.302" status="PASS"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>5 min</arg>
<arg>5 sec</arg>
<arg>Check Request Status</arg>
</arguments>
<kw name="Check Request Status">
<kw name="Get Request" library="tnglib">
<doc>Returns info on a specific request.</doc>
<arguments>
<arg>${REQUEST}</arg>
</arguments>
<assign>
<var>${requests}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:04.735">${requests} = (True, {'description': '', 'customer_email': '', 'id': '186d9bd8-df85-4d5c-bf39-45d26f39a21a', 'flavor': None, 'service': {'vendor': 'eu.5gtango', 'name': 'test-ns-nsid1v-sonata-no-tags', 'uuid': 'a9c...</msg>
<status endtime="20190729 17:40:04.735" starttime="20190729 17:40:00.307" status="PASS"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${INSTANCE_UUID}</arg>
<arg>${requests[1]['instance_uuid']}</arg>
</arguments>
<msg level="INFO" timestamp="20190729 17:40:04.747">${INSTANCE_UUID} = aa71f0c7-49a3-43ec-84c8-57b76b71c107</msg>
<status endtime="20190729 17:40:04.747" starttime="20190729 17:40:04.745" status="PASS"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${READY}</arg>
<arg>${requests[1]['status']}</arg>
</arguments>
<status endtime="20190729 17:40:04.750" starttime="20190729 17:40:04.748" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:04.751" starttime="20190729 17:40:00.307" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:04.752" starttime="20190729 17:40:00.306" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:04.752" starttime="20190729 17:37:50.494" status="PASS" critical="yes"></status>
</test>
<test name="Retrieve list of monitoring metrics" id="s1-t6">
<kw name="Get Services" library="tnglib">
<doc>Returns all the vnfs/vdus per NS.</doc>
<arguments>
<arg>${INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>@{VNFS}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:05.144">@{VNFS} = [ True | [{'vdu_uuid': '5128482e-05e1-4326-9b73-acdeaa308e58', 'vnf_uuid': 'cf21e0fd-915e-4ee9-8dea-1993e2d675e0'}] ]</msg>
<status endtime="20190729 17:40:05.144" starttime="20190729 17:40:04.756" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${VNFS[0]}</arg>
</arguments>
<status endtime="20190729 17:40:05.145" starttime="20190729 17:40:05.145" status="PASS"></status>
</kw>
<kw name="${VNF} IN [ @{VNFS[1]} ]" type="for">
<kw name="${VNF} = {'vdu_uuid': '5128482e-05e1-4326-9b73-acdeaa308e58', 'vnf_uuid': 'cf21e0fd-915e-4ee9-8dea-1993e2d675e0'}" type="foritem">
<kw name="Get Metrics" library="tnglib">
<doc>Returns all metrics per vnf and vdu.</doc>
<arguments>
<arg>${VNF['vnf_uuid']}</arg>
<arg>${VNF['vdu_uuid']}</arg>
</arguments>
<assign>
<var>${METRIC_LIST}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:07.589">${METRIC_LIST} = (True, [])</msg>
<status endtime="20190729 17:40:07.589" starttime="20190729 17:40:05.146" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${METRIC_LIST[1]}</arg>
</arguments>
<assign>
<var>${LGH}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:07.590">Length is 0</msg>
<msg level="INFO" timestamp="20190729 17:40:07.591">${LGH} = 0</msg>
<status endtime="20190729 17:40:07.591" starttime="20190729 17:40:07.589" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${LGH} == 0</arg>
</arguments>
<status endtime="20190729 17:40:07.592" starttime="20190729 17:40:07.591" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${METRIC_LIST}</arg>
</arguments>
<msg level="INFO" timestamp="20190729 17:40:07.593">(True, [])</msg>
<status endtime="20190729 17:40:07.593" starttime="20190729 17:40:07.592" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:07.593" starttime="20190729 17:40:05.146" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:07.593" starttime="20190729 17:40:05.145" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:07.594" starttime="20190729 17:40:04.754" status="PASS" critical="yes"></status>
</test>
<test name="Wait For Test Execution" id="s1-t7">
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${VNV_HOST}</arg>
</arguments>
<status endtime="20190729 17:40:07.596" starttime="20190729 17:40:07.595" status="PASS"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20 min</arg>
<arg>5 sec</arg>
<arg>Check Test Result Status</arg>
</arguments>
<kw name="Check Test Result Status">
<kw name="Get Test Uuid By Instance Uuid" library="tnglib">
<doc>Returns the test_uuid on a specific test result filtering by instance_uuid.</doc>
<arguments>
<arg>${INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${test_uuid}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:08.174">${test_uuid} = (True, [{'uuid': '02c7179d-0e64-4c5a-a04f-c5b58084a086'}])</msg>
<status endtime="20190729 17:40:08.174" starttime="20190729 17:40:07.598" status="PASS"></status>
</kw>
<kw name="Get Test Result" library="tnglib">
<doc>Returns info on a specific test result.</doc>
<arguments>
<arg>${test_uuid[1][0]['uuid']}</arg>
</arguments>
<assign>
<var>${results}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:10.492">${results} = (True, {'started_at': '2019-07-29T14:39:24.807Z', 'uuid': '02c7179d-0e64-4c5a-a04f-c5b58084a086', 'test_instance_uuid': '2d286ac9-f0f4-4ce4-8851-e929900b5a0d', 'status': 'PASSED', 'updated_at': '2019-...</msg>
<status endtime="20190729 17:40:10.492" starttime="20190729 17:40:08.175" status="PASS"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${PASSED}</arg>
<arg>${results[1]['status']}</arg>
</arguments>
<status endtime="20190729 17:40:10.493" starttime="20190729 17:40:10.492" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:10.493" starttime="20190729 17:40:07.597" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:10.493" starttime="20190729 17:40:07.597" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:10.493" starttime="20190729 17:40:07.594" status="PASS" critical="yes"></status>
</test>
<test name="Stop Collecting Monitoring Data" id="s1-t8">
<kw name="Stop Monitoring" library="tnglib">
<doc>Stop collecting data related to specific service.</doc>
<arguments>
<arg>${INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:11.004">${resp} = (True, [{'srv_uuid': 'aa71f0c7-49a3-43ec-84c8-57b76b71c107'}])</msg>
<status endtime="20190729 17:40:11.004" starttime="20190729 17:40:10.494" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:11.004" starttime="20190729 17:40:10.493" status="PASS" critical="yes"></status>
</test>
<test name="Retrieve Stored Monitoring Data" id="s1-t9">
<kw name="Get Vnv Tests" library="tnglib">
<doc>Returns list of stored tests.</doc>
<arguments>
<arg>${INSTANCE_UUID}</arg>
</arguments>
<assign>
<var>${DATA_SET}</var>
</assign>
<msg level="INFO" timestamp="20190729 17:40:11.295">${DATA_SET} = (True, [{'started': '2019-07-29T14:39:27.457578Z', 'terminated': '2019-07-29T14:40:10.814582Z', 'test_uuid': 'null', 'data': {'status': 'Success', 'vnfs': [{'vnf_id': 'cf21e0fd-915e-4ee9-8dea-1993e2d6...</msg>
<status endtime="20190729 17:40:11.296" starttime="20190729 17:40:11.005" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DATA_SET[0]}</arg>
</arguments>
<status endtime="20190729 17:40:11.298" starttime="20190729 17:40:11.297" status="PASS"></status>
</kw>
<status endtime="20190729 17:40:11.298" starttime="20190729 17:40:11.005" status="PASS" critical="yes"></status>
</test>
<doc>Test monitoring data collection</doc>
<status endtime="20190729 17:40:11.303" starttime="20190729 17:37:23.167" status="PASS"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Test" fail="0" id="s1" pass="9">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
